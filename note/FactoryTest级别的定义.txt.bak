一、FactoryTest级别的定义:

	Android系统中在com.android.server.SystemServer(loc:frameworks/base/services/Java/)中对FactoryTest的级别做了定义：

		public static final int FACTORY_TEST_OFF =0;  
		public static final int FACTORY_TEST_LOW_LEVEL = 1;  
		public static final int FACTORY_TEST_HIGH_LEVEL= 2;  
 
  	FACTORY_TEST_OFF是正常模式；
  	FACTORY_TEST_LOW_LEVEL是工程模式做在较低的级别，也就是运行工程模式的时候，很多的service并不需要启动；
  	FACTORY_TEST_HIGH_LEVEL是工程模式做在较高的级别，也就是运行工程模式的时候，基本的Android运行环境是同正常模式是相同的。在原生的实现中，与正常模式相比除了ActivityManagerService外并没有太多不同。
  	

二、FactoryTest不需要启动的服务:

	系统从FACTORY_TEST_LOW_LEVEL模式启动，下列服务或Observer根本就不会被启动：
	
		BluetoothService
		BluetoothA2dpService
		DevicePolicyService
		StatusBarManagerService
		ClipboardService
		InputMethodManagerService
		NetStatService
		NetworkManagementService
		ConnectivityService
		ThrottleService
		AccessibilityManagerService
		MountService
		NotificationManagerService
		DeviceStorageMonitorService
		LocationManagerService
		SearchManagerService
		DropBoxManagerService
		WallpaperManagerService
		AudioService
		HeadsetObserver
		HookSwitchObserver
		HdmiObserver
		DockObserver
		UsbService
		UiModeManagerService
		BackupManagerService
		AppWidgetService
		RecognitionManagerService
		DiskStatsService
 
	而下列基本的服务会在FACTORY_TEST_LOW_LEVEL模式时执行的路径有所不同：
		ActivityManagerService
    	FACTORY_TEST_LOW_LEVEL模式时，不会发出BOOT_COMPLETED广播；启动第一个程序不是通过Acrtion为MAIN，Category为Home的Intent来启动第一个程序，而是通过Acrtion为Intent.ACTION_FACTORY_TEST (“android.intent.action.FACTORY_TEST)的Intent来启动。
		PackageManagerService
    	FACTORY_TEST_LOW_LEVEL模式时，对包含FACTORY_TEST这个Permission的包，加上ApplicationInfo.FLAG_FACTORY_TEST的标志。
		ContentService
   		FACTORY_TEST_LOW_LEVEL模式时，SyncManager会因为FactoryTest模式下的差异，而表现不同。
		WindowManagerService
   	FACTORY_TEST_LOW_LEVEL模式时，没有输入法。
   	
   	
三、FactoryTest的配置:

	由上面简要分析知道，FACTORY_TEST_LOW_LEVEL模式下，第一个被启动的程序就是工程模式的测试程序，而这个程序必须：
  	.有响应Action为Intent.ACTION_FACTORY_TEST(“android.intent.action.FACTORY_TEST”)的Activity；
  	.另外，这个程序还必须获取“android.permission.FACTORY_TEST”；
  	.这个程序必须为系统内置程序（安装在/system/app/）
 
	响应Action为Intent.ACTION_FACTORY_TEST (“android.intent.action.FACTORY_TEST”)的Activity在开机之后就被执行。
		
3.2 启动模式设置:

	启动模式是由“ro.factorytest”这个系统属性来决定的，取值范围是0/1/2，对应第一部分定义的三个级别模式。可在在.mk文件中通过PRODUCT_PROPERTY_OVERRIDES或ADDITIONAL_DEFUALT_PROPERTIES追加一个这样的属性。比如：
	[plain] view plain copy
	#FactoryTest LowLevel  
	PRODUCT_PROPERTY_OVERRIDE += ro.factorytest=1  
	
3.3 内核启动模式：

